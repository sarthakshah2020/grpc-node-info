#!/bin/bash

# List of all branches
branches=(
    "satisfiability/schnoing"
    "satisfiability/dpll_backtracking"
    "satisfiability/genetic_sat"
    "satisfiability/walk_sat"
    "satisfiability/satisfiapilled"
    "satisfiability/i_cant_get_no"
    "satisfiability/need_for_speed"
    "satisfiability/walk_sat_adapt_tabu"
    "satisfiability/fast_walk_sat"
    "satisfiability/sprint_sat"
    "satisfiability/faster_walk_sat"
    "satisfiability/fastest_walk_sat"
    "satisfiability/filter_sat"
    "satisfiability/sprintier_sat"
    "satisfiability/inbound"
    "satisfiability/double_optimized"
    "satisfiability/fast_cdcl_sat_solver"
    "satisfiability/hybrid_ultra_fast"
    "satisfiability/optimized_sprint_sat"
    "satisfiability/sat_allocd"
    "satisfiability/mt_sat"
    "vehicle_routing/clarke_wright"
    "vehicle_routing/vrp_solver"
    "vehicle_routing/ant_colony"
    "vehicle_routing/genetic_algorithm"
    "vehicle_routing/tabu_search"
    "vehicle_routing/simulated_annealing"
    "vehicle_routing/limitless"
    "vehicle_routing/dynamic_colonies"
    "vehicle_routing/lazier_cw"
    "vehicle_routing/guided_clarke_wright"
    "vehicle_routing/aco_sbas"
    "vehicle_routing/fast_exit_clarke"
    "vehicle_routing/filter_cw"
    "vehicle_routing/vehicles_routed"
    "vehicle_routing/cw_optimised"
    "vehicle_routing/overloded"
    "vehicle_routing/clarke_wright_fast"
    "vehicle_routing/clarke_wright_opt"
    "vehicle_routing/clarke_wright_who"
    "vehicle_routing/cw_two_opt_ls"
    "vehicle_routing/super_heaped"
    "vehicle_routing/enhanced_annealing"
    "vehicle_routing/optimized_clarke"
    "vehicle_routing/adaptive_cluster"
    "vehicle_routing/quantum_swarm"
    "vehicle_routing/compact_gcw"
    "vehicle_routing/fast_exit_cw_topt_ls"
    "vehicle_routing/inbound"
    "vehicle_routing/compact_gcw_turbo"
    "vehicle_routing/improv_clarke_wright"
    "knapsack/dynamic"
    "knapsack/greedy"
    "knapsack/branch_and_bound"
    "knapsack/genetic"
    "knapsack/tabu_search"
    "knapsack/knapmaxxing"
    "knapsack/better_in_twos"
    "knapsack/tinhat_pete"
    "knapsack/knapsplorify"
    "knapsack/dual_descent"
    "knapsack/ironhat_pete"
    "knapsack/flat_dp"
    "knapsack/filter_knapmaxxing"
    "knapsack/better_knapp"
    "knapsack/better_knapm"
    "knapsack/optimised_knapmax"
    "knapsack/overlodes_sack"
    "knapsack/knapheudp"
    "knapsack/knapsack_para"
    "knapsack/over_knapmaxxed"
    "knapsack/needaknap"
    "knapsack/sack_o_potatoes"
    "knapsack/fast_knapsack"
    "knapsack/lightning_knapsack"
    "knapsack/neural_knapsack"
    "knapsack/quantum_knapsack"
    "knapsack/ultra_fast_knapsack"
    "knapsack/sackophone"
)

# Loop through each branch and pull
for branch in "${branches[@]}"
do
    echo "Processing $branch..."
    
    # Attempt to pull the branch
    if git pull origin "$branch" --no-edit --no-rebase; then
        echo "Successfully pulled $branch"
    else
        echo "Failed to pull $branch. Skipping..."
    fi
done

echo "All branches have been processed."